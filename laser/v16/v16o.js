var _0x5052 = ["attach", "findExportByName", "libc.so", "getaddrinfo", "readUtf8String", "writeUtf8String", "use", "java.lang.System", "loadLibrary", "overload", "java.lang.String", "dalvik.system.VMStack", "implementation", "getRuntime", "getCallingClassLoader", "lib", ".so", "getByteStream", "setVersion", "readPointer", "int", "encode", "void", "pointer", "readInt", "getByteArray", "setByteArray", "writePointer", "getLength", "setLength", "writeInt", "setEncodingLength", "writeU8", "setMessageType", "setMessageVersion", "getMessageType", "readU8", "get", "set", "incrementCount", "getEnqueueIndex", "setEnqueueIndex", "pthread_mutex_unlock", "sendto", "memmove", "sub", "replace", "getOffset", "recvfrom", "decode", "redirectHost", "game.brawlstarsgame.com", "options", "libg.so", "pthread_cond_signal", "context", "equals", "exports", "modules", "findModuleByName", "enumerateRangesSync", "ranges", "push", "protection", "base", "add"];
(function (_0x25d00d, _0x5773e8) {
    var _0xb7d2a3 = function (_0x52ed40) {
        while (--_0x52ed40) {
            _0x25d00d.push(_0x25d00d.shift());
        }
    };
    _0xb7d2a3(++_0x5773e8);
}(_0x5052, 190));
var _0x312f = function (_0x47a3cc, _0x3386d9) {
    _0x47a3cc = _0x47a3cc - 0;
    var _0x4203d7 = _0x5052[_0x47a3cc];
    return _0x4203d7;
};
var cache = { modules: {}, options: {} };
const SERVER_CONNECTION = 10026184;
const SENDTO = 5794168;
const RECVFROM = 5794128;
const NEW_OPERATOR = 5896361;
const WAKEUP = 5794715;
const CREATE_MESSAGE_BY_TYPE = 4101212;
const POINTER_SIZE = 4;
function moduleInfo(_0x2052d8, _0x5c9d19) {
    if (cache[_0x312f("0x0")][_0x2052d8] && !_0x5c9d19) {
        return cache[_0x312f("0x0")][_0x2052d8];
    }
    const _0x3e1a4c = Process[_0x312f("0x1")](_0x2052d8);
    const _0x261daa = Module[_0x312f("0x2")](_0x2052d8, "---");
    const _0x21b2da = { name: _0x2052d8, base: _0x3e1a4c.base, ranges: [] };
    for (var _0x751031 = 0; _0x751031 < _0x261daa.length; _0x751031 += 1) {
        _0x21b2da[_0x312f("0x3")][_0x312f("0x4")]({ base: _0x261daa[_0x751031].base, size: _0x261daa[_0x751031].size, protection: _0x261daa[_0x751031][_0x312f("0x5")] });
    }
    cache.modules[_0x2052d8] = _0x21b2da;
    return _0x21b2da;
}
function lptr(_0x445058, _0x537a3c) {
    const _0x4fbb42 = moduleInfo(_0x445058);
    return _0x4fbb42[_0x312f("0x6")][_0x312f("0x7")](_0x537a3c);
}
function redirectHost(_0x3e7b28, _0x2457e5) {
    Interceptor[_0x312f("0x8")](Module[_0x312f("0x9")](_0x312f("0xa"), _0x312f("0xb")), function (_0x597d8d) {
        if (Memory[_0x312f("0xc")](_0x597d8d[0]) === _0x3e7b28) {
            Memory[_0x312f("0xd")](_0x597d8d[0], _0x2457e5);
        }
    });
}
function onLoad(_0x51f88e, _0x42f93b) {
    Java.perform(function () {
        const _0x4c83f3 = Java[_0x312f("0xe")](_0x312f("0xf"));
        const _0x2fecff = Java[_0x312f("0xe")]("java.lang.Runtime");
        const _0x12760e = _0x4c83f3[_0x312f("0x10")][_0x312f("0x11")](_0x312f("0x12"));
        const _0x1ccff9 = Java.use(_0x312f("0x13"));
        _0x12760e[_0x312f("0x14")] = function (_0x7a85f5) {
            try {
                if (_0x2fecff[_0x312f("0x15")]().loadLibrary0) {
                    _0x2fecff[_0x312f("0x15")]().loadLibrary0(_0x1ccff9[_0x312f("0x16")](), _0x7a85f5);
                } else {
                    _0x2fecff[_0x312f("0x15")]()[_0x312f("0x10")](_0x7a85f5, _0x1ccff9[_0x312f("0x16")]());
                }
                if (_0x51f88e === _0x312f("0x17") + _0x7a85f5 + _0x312f("0x18")) {
                    _0x42f93b();
                }
            } catch (_0x2244cf) { }
        };
    });
}
function Message() { }
Message[_0x312f("0x19")] = function (_0x2d286f) {
    return _0x2d286f[_0x312f("0x7")](8);
};
Message.getVersion = function (_0x18dbed) {
    return Memory.readInt(_0x18dbed[_0x312f("0x7")](4));
};
Message[_0x312f("0x1a")] = function (_0x58a60b, _0x3b054a) {
    Memory.writeInt(_0x58a60b[_0x312f("0x7")](4), _0x3b054a);
};
Message.getMessageType = function (_0xa084ad) {
    return new NativeFunction(Memory[_0x312f("0x1b")](Memory[_0x312f("0x1b")](_0xa084ad)[_0x312f("0x7")](20)), _0x312f("0x1c"), [])();
};
Message[_0x312f("0x1d")] = function (_0xf904fb) {
    new NativeFunction(Memory[_0x312f("0x1b")](Memory[_0x312f("0x1b")](_0xf904fb)[_0x312f("0x7")](8)), _0x312f("0x1e"), [_0x312f("0x1f")])(_0xf904fb);
};
Message.decode = function (_0x3aeeec) {
    new NativeFunction(Memory.readPointer(Memory.readPointer(_0x3aeeec)[_0x312f("0x7")](12)), _0x312f("0x1e"), [_0x312f("0x1f")])(_0x3aeeec);
};
function ByteStream() { }
ByteStream.getOffset = function (_0x23c8cf) {
    return Memory[_0x312f("0x20")](_0x23c8cf.add(16));
};
ByteStream[_0x312f("0x21")] = function (_0x5bb98f) {
    return Memory[_0x312f("0x1b")](_0x5bb98f[_0x312f("0x7")](28));
};
ByteStream[_0x312f("0x22")] = function (_0x4fb98e, _0x1919ff) {
    Memory[_0x312f("0x23")](_0x4fb98e[_0x312f("0x7")](28), _0x1919ff);
};
ByteStream[_0x312f("0x24")] = function (_0x1a7bb3) {
    return Memory.readInt(_0x1a7bb3[_0x312f("0x7")](20));
};
ByteStream[_0x312f("0x25")] = function (_0x3d952b, _0xd2e15a) {
    Memory[_0x312f("0x26")](_0x3d952b.add(20), _0xd2e15a);
};
function Buffer() { }
Buffer[_0x312f("0x27")] = function (_0x253ca8, _0x1db234) {
    Memory[_0x312f("0x28")](_0x253ca8[_0x312f("0x7")](2), _0x1db234 >> 16 & 255);
    Memory.writeU8(_0x253ca8[_0x312f("0x7")](3), _0x1db234 >> 8 & 255);
    Memory[_0x312f("0x28")](_0x253ca8[_0x312f("0x7")](4), _0x1db234 & 255);
};
Buffer[_0x312f("0x29")] = function (_0x4158c8, _0x74c3d5) {
    Memory[_0x312f("0x28")](_0x4158c8.add(0), _0x74c3d5 >> 8 & 255);
    Memory[_0x312f("0x28")](_0x4158c8[_0x312f("0x7")](1), _0x74c3d5 & 255);
};
Buffer[_0x312f("0x2a")] = function (_0x461a10, _0x19e96b) {
    Memory.writeU8(_0x461a10[_0x312f("0x7")](5), _0x19e96b >> 8 & 255);
    Memory.writeU8(_0x461a10[_0x312f("0x7")](6), _0x19e96b & 255);
};
Buffer[_0x312f("0x2b")] = function (_0x5ee821) {
    return Memory[_0x312f("0x2c")](_0x5ee821) << 8 | Memory[_0x312f("0x2c")](_0x5ee821.add(1));
};
function MessageQueue() { }
MessageQueue.getCapacity = function (_0x16790f) {
    return Memory[_0x312f("0x20")](_0x16790f.add(4));
};
MessageQueue[_0x312f("0x2d")] = function (_0x46ce67, _0x59e673) {
    return Memory[_0x312f("0x1b")](Memory[_0x312f("0x1b")](_0x46ce67)[_0x312f("0x7")](POINTER_SIZE * _0x59e673));
};
MessageQueue[_0x312f("0x2e")] = function (_0x1370fe, _0x3679f8, _0x41e5db) {
    Memory[_0x312f("0x23")](Memory.readPointer(_0x1370fe).add(POINTER_SIZE * _0x3679f8), _0x41e5db);
};
MessageQueue[_0x312f("0x2f")] = function (_0x44d2aa) {
    Memory[_0x312f("0x26")](_0x44d2aa[_0x312f("0x7")](8), Memory[_0x312f("0x20")](_0x44d2aa[_0x312f("0x7")](8)) + 1);
};
MessageQueue.getDequeueIndex = function (_0x541486) {
    return Memory[_0x312f("0x20")](_0x541486[_0x312f("0x7")](12));
};
MessageQueue[_0x312f("0x30")] = function (_0x2c729d) {
    return Memory.readInt(_0x2c729d[_0x312f("0x7")](16));
};
MessageQueue[_0x312f("0x31")] = function (_0x1d63e8, _0x894ae4) {
    Memory[_0x312f("0x26")](_0x1d63e8.add(16), _0x894ae4);
};
function setupMessaging() {
    const _0x1057a9 = Process[_0x312f("0x1")]("libg.so").base;
    var _0x108e4b = Memory[_0x312f("0x1b")](_0x1057a9[_0x312f("0x7")](SERVER_CONNECTION));
    var _0x4785c7 = Memory.readPointer(_0x108e4b.add(4));
    var _0x34f5cb = Memory.readPointer(_0x4785c7[_0x312f("0x7")](52));
    var _0x765cdd = _0x4785c7[_0x312f("0x7")](60);
    var _0x3e44cb = _0x4785c7.add(84);
    var _0x2242ba = _0x4785c7[_0x312f("0x7")](212);
    var _0x361651 = _0x4785c7[_0x312f("0x7")](216);
    const _0x10e6f1 = new NativeFunction(Module[_0x312f("0x9")](_0x312f("0xa"), "pthread_mutex_lock"), _0x312f("0x1c"), [_0x312f("0x1f")]);
    const _0x2b9624 = new NativeFunction(Module[_0x312f("0x9")]("libc.so", _0x312f("0x32")), _0x312f("0x1c"), [_0x312f("0x1f")]);
    const _0xdcd80c = new NativeFunction(Module[_0x312f("0x9")]("libc.so", _0x312f("0x33")), _0x312f("0x1c"), [_0x312f("0x1c"), _0x312f("0x1f"), _0x312f("0x1c"), _0x312f("0x1c"), _0x312f("0x1f"), _0x312f("0x1c")]);
    const _0x5edf81 = new NativeFunction(Module.findExportByName(_0x312f("0xa"), _0x312f("0x34")), _0x312f("0x1f"), [_0x312f("0x1f"), "pointer", _0x312f("0x1c")]);
    const _0x2b6de8 = new NativeFunction(_0x1057a9[_0x312f("0x7")](NEW_OPERATOR), _0x312f("0x1f"), [_0x312f("0x1c")]);
    const _0x30640d = function (_0x1d4e19, _0x408711) {
        _0x10e6f1(_0x1d4e19.sub(4));
        const _0x38a45b = MessageQueue[_0x312f("0x30")](_0x1d4e19);
        MessageQueue.set(_0x1d4e19, _0x38a45b, _0x408711);
        MessageQueue.setEnqueueIndex(_0x1d4e19, (_0x38a45b + 1) % MessageQueue.getCapacity(_0x1d4e19));
        MessageQueue.incrementCount(_0x1d4e19);
        _0x2b9624(_0x1d4e19[_0x312f("0x35")](4));
    };
    Interceptor[_0x312f("0x36")](_0x1057a9[_0x312f("0x7")](SENDTO), new NativeCallback(function (_0x4f4f4e, _0x5b93e9, _0x18bcbf, _0x15bf06, _0x3a7d82, _0x39f00a) {
        const _0x567d68 = Buffer[_0x312f("0x2b")](_0x5b93e9);
        var _0x256a61, _0x4e6214;
        if (_0x567d68 === 10100) {
            var _0x2b9849, _0x4e4d45;
            _0x256a61 = Memory.readPointer(_0x361651);
            Message[_0x312f("0x1d")](_0x256a61);
            _0x4e6214 = Message.getByteStream(_0x256a61);
            _0x4e4d45 = ByteStream[_0x312f("0x37")](_0x4e6214);
            _0x2b9849 = _0x2b6de8(_0x4e4d45 + 7);
            _0x5edf81(_0x2b9849[_0x312f("0x7")](7), ByteStream[_0x312f("0x21")](_0x4e6214), _0x4e4d45);
            Buffer[_0x312f("0x27")](_0x2b9849, _0x4e4d45);
            Buffer[_0x312f("0x29")](_0x2b9849, 10101);
            Buffer[_0x312f("0x2a")](_0x2b9849, 10);
            _0xdcd80c(_0x4f4f4e, _0x2b9849, _0x4e4d45 + 7, _0x15bf06, _0x3a7d82, _0x39f00a);
            Memory[_0x312f("0x23")](_0x361651, ptr(0));
        } else {
            _0x10e6f1(_0x3e44cb.sub(4));
            const _0x5bb363 = MessageQueue.getCapacity(_0x3e44cb);
            var _0x113bae = (MessageQueue.getDequeueIndex(_0x3e44cb) - 1) % _0x5bb363;
            if (_0x113bae < 0) {
                _0x113bae += _0x5bb363;
            }
            _0x256a61 = MessageQueue[_0x312f("0x2d")](_0x3e44cb, _0x113bae);
            _0x4e6214 = Message[_0x312f("0x19")](_0x256a61);
            const _0x4d0065 = ByteStream[_0x312f("0x37")](_0x4e6214);
            Buffer[_0x312f("0x27")](_0x5b93e9, _0x4d0065);
            _0x5edf81(_0x5b93e9[_0x312f("0x7")](7), ByteStream[_0x312f("0x21")](_0x4e6214), _0x4d0065);
            _0xdcd80c(_0x4f4f4e, _0x5b93e9, _0x4d0065 + 7, _0x15bf06, _0x3a7d82, _0x39f00a);
            _0x2b9624(_0x3e44cb[_0x312f("0x35")](4));
        }
        return _0x18bcbf;
    }, "int", ["int", "pointer", "int", _0x312f("0x1c"), "pointer", _0x312f("0x1c")]));
    const _0x5725a5 = new NativeFunction(Module[_0x312f("0x9")](_0x312f("0xa"), _0x312f("0x38")), _0x312f("0x1c"), [_0x312f("0x1c"), "pointer", _0x312f("0x1c"), "int", _0x312f("0x1f"), _0x312f("0x1f")]);
    const _0x1ebea8 = new NativeFunction(_0x1057a9[_0x312f("0x7")](CREATE_MESSAGE_BY_TYPE), "pointer", ["pointer", _0x312f("0x1c")]);
    var _0x5c9fbc, _0x26a94d, _0x1a6e9f;
    Interceptor.replace(_0x1057a9.add(RECVFROM), new NativeCallback(function (_0x2ad119, _0x15bc00, _0x5e2053, _0x5b58a9, _0x4d8e17, _0x2dfc9b) {
        var _0x50e003 = _0x5725a5(_0x2ad119, _0x15bc00, _0x5e2053, _0x5b58a9, _0x4d8e17, _0x2dfc9b);
        if (_0x5c9fbc === 20100) {
            _0x5c9fbc = null;
            return _0x50e003;
        }
        if (_0x5c9fbc === 20104) {
            Memory[_0x312f("0x26")](_0x2242ba, 5);
        }
        if (!_0x5c9fbc) {
            _0x5c9fbc = Buffer.getMessageType(_0x15bc00);
            _0x26a94d = Memory.readU8(_0x15bc00[_0x312f("0x7")](5)) << 8 | Memory.readU8(_0x15bc00[_0x312f("0x7")](6));
            if (_0x5c9fbc === 20100) {
                return _0x50e003;
            }
            const _0x7d56d6 = Memory.readU8(_0x15bc00[_0x312f("0x7")](2)) << 16 | Memory.readU8(_0x15bc00[_0x312f("0x7")](3)) << 8 | Memory[_0x312f("0x2c")](_0x15bc00[_0x312f("0x7")](4));
            if (_0x7d56d6 === 0) {
                _0x1a6e9f = _0x1ebea8(_0x34f5cb, _0x5c9fbc);
                Message[_0x312f("0x1a")](_0x1a6e9f, _0x26a94d);
                ByteStream[_0x312f("0x25")](Message.getByteStream(_0x1a6e9f), 0);
                Message[_0x312f("0x39")](_0x1a6e9f);
                _0x30640d(_0x765cdd, _0x1a6e9f);
                _0x5c9fbc = null;
            }
            Buffer[_0x312f("0x29")](_0x15bc00, 65535);
        } else {
            _0x1a6e9f = _0x1ebea8(_0x34f5cb, _0x5c9fbc);
            Message.setVersion(_0x1a6e9f, _0x26a94d);
            var _0x36948f = Message[_0x312f("0x19")](_0x1a6e9f);
            ByteStream[_0x312f("0x25")](_0x36948f, _0x5e2053);
            const _0x52aadb = _0x2b6de8(_0x5e2053);
            _0x5edf81(_0x52aadb, _0x15bc00, _0x5e2053);
            ByteStream[_0x312f("0x22")](_0x36948f, _0x52aadb);
            Message[_0x312f("0x39")](_0x1a6e9f);
            _0x30640d(_0x765cdd, _0x1a6e9f);
            _0x5c9fbc = null;
        }
        return _0x50e003;
    }, _0x312f("0x1c"), [_0x312f("0x1c"), _0x312f("0x1f"), "int", "int", "pointer", _0x312f("0x1f")]));
}
function setup() {
    redirectHost(_0x312f("0x3b"), "127.0.0.1"); // IP Here
    var _0x19fa9c = lptr(_0x312f("0x3d"), WAKEUP);
    var _0x1171e6 = Interceptor.attach(Module[_0x312f("0x9")](_0x312f("0xa"), _0x312f("0x3e")), {
        onEnter: function () {
            if (this[_0x312f("0x3f")].lr[_0x312f("0x40")](_0x19fa9c)) {
                _0x1171e6.detach();
                setupMessaging();
            }
        }
    });
}
rpc[_0x312f("0x41")] = {
    init: function (_0x549189, _0x3c1e3a) {
        try {
            cache[_0x312f("0x3c")] = _0x3c1e3a || {};
            onLoad("libg.so", function () {
                setup();
            });
        } catch (_0x195e0c) { }
    }
};
